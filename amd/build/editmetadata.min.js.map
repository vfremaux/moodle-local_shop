{"version":3,"file":"editmetadata.min.js","sources":["../src/editmetadata.js"],"sourcesContent":["/*\n * Some form helpers to edit complex dynamic metadata arrays.\n */\n// jshint unused:false, undef:false\n\ndefine(['jquery', 'core/log'], function($, log) {\n\n    var shopmetadataedit = {\n\n        /**\n         * Initiates, placing events handler in content.\n         */\n        init: function() {\n            $('input[name=\"editextradata\"]').bind('click', this.openeditmodal);\n            $('input[name=\"editproductiondata\"]').bind('click', this.openeditmodal);\n            $('input[name=\"edithandlerparams\"]').bind('click', this.openeditmodal);\n        },\n\n        /**\n         * Parses the textarea content and extracts property:value pairs.\n         */\n        parsevalues: function(values, format) {\n            var arr, part, parts, valuearr = [];\n\n            if (format === 'json') {\n                // Jsonified format as {\"key1\":\"val1\", \"key2\":\"val2\",...}\n                valuearr = JSON.parse(values);\n            } else {\n                // Url encoded format as key1=val1&key1=val2... etc.\n                parts = values.split('&');\n                for (part in parts) {\n                    arr = parts[part].split('=');\n                    valuearr[arr[0]] = arr[1];\n                }\n            }\n\n            return valuearr;\n        },\n\n        /**\n         * Recombines property::value array into the text area content.\n         */\n        recombinevalues: function(values, format) {\n            var val;\n            var valueparts = [];\n\n            if (format === 'json') {\n                // Jsonified format as {\"key1\":\"val1\", \"key2\":\"val2\",...}\n                return JSON.stringify(values);\n            } else {\n                // Url encoded format as key1=val1&key1=val2... etc.\n                for (val in values) {\n                    valueparts.push(val + '=' + values[val]);\n                }\n                return valueparts.join('&');\n            }\n        },\n\n        /**\n         * Opens modal and build a local form from textarea value.\n         */\n        openeditmodal: function(e) {\n\n            e.stopPropagation();\n            e.preventDefault();\n\n            log.debug(\"Opening modal for metadatas.\");\n\n            var that = $(this);\n            var row;\n            var rowname;\n            var rowinput;\n            var closebtn;\n            var theform = $('#metadata-edit-modal-form');\n            var themodal = $('#metadata-edit-modal-container');\n            var associatedtextarea = $('[data-edithandle=' + that.attr('id') + ']');\n            var format = associatedtextarea.attr('data-format');\n            var values = shopmetadataedit.parsevalues(associatedtextarea.val(), format);\n            var valkey;\n\n            log.debug('Detected format is ' + format + '.');\n\n            for (valkey in values) {\n                row = $('<div/>', {\n                    'class': 'mtd-row'\n                });\n                rowname = $('<div class=\"mtd-name\">' + valkey + '</div>');\n                rowinput = $('<div/>');\n                rowinput.append($('<input/>', {\n                    type: 'text',\n                    size: 80,\n                    value: values[valkey],\n                    placeholder: valkey,\n                    name: valkey\n                }));\n                row.append(rowname).append(rowinput);\n                theform.append(row);\n            }\n\n            row = $('<div/>', {\n                'class': 'mtd-row'\n            });\n            rowname = $('<div/>');\n            rowname.append($('<input/>', {\n                type: 'text',\n                value: '',\n                placeholder: 'New key',\n                name: 'newkey'\n            }));\n            rowinput = $('<div/>');\n            rowinput.append($('<input/>', {\n                type: 'text',\n                value: '',\n                size: 80,\n                placeholder: 'New value',\n                name: 'newval'\n            }));\n            row.append(rowname).append(rowinput);\n            theform.append(row);\n\n            row = $('<div/>', {\n                'class': 'mtd-row'\n            });\n            closebtn = $('<div/>');\n            closebtn.append($('<input/>', {\n                type: 'button',\n                id: 'mtd-close',\n                value: 'Save',\n                'data-format': format,\n                'data-for': associatedtextarea.attr('id'),\n                'class': 'btn btn-primary'\n            }));\n            closebtn.append($('<input/>', {\n                type: 'button',\n                id: 'mtd-cancel',\n                value: 'Cancel',\n                'data-format': format,\n                'data-for': associatedtextarea.attr('id'),\n                'class': 'btn btn-primary'\n            }));\n            row.append($('<div/>')).append(closebtn);\n            theform.append(row);\n            $('#mtd-close').bind('click', shopmetadataedit.closeeditmodal);\n            $('#mtd-cancel').bind('click', shopmetadataedit.canceleditmodal);\n            themodal.css('display', 'block');\n        },\n\n        /**\n         * Closes without saving.\n         */\n        canceleditmodal: function(e) {\n\n            var themodal = $('#metadata-edit-modal-container');\n            var theform = $('#metadata-edit-modal-form');\n\n            e.stopPropagation();\n            e.preventDefault();\n\n            theform.empty();\n            themodal.css('display', 'none');\n        },\n\n        /**\n         * Saves back metadata and closes helper modal.\n         */\n        closeeditmodal: function(e) {\n\n            e.stopPropagation();\n            e.preventDefault();\n\n            var that = $(this);\n            var themodal = $('#metadata-edit-modal-container');\n            var theform = $('#metadata-edit-modal-form');\n            var valuebuf;\n            var format = that.attr('data-format');\n            var newkey, newval;\n\n            // Search all inputs in form.\n            var inputs = $('input[type=\"text\"]', theform);\n\n            valuebuf = new Object();\n            inputs.each(function () {\n                if ($(this).attr('name') === 'newkey') {\n                    newkey = $(this).val();\n                } else if ($(this).attr('name') === 'newval') {\n                    newval = $(this).val();\n                } else {\n                    valuebuf[$(this).attr('name')] = $(this).val();\n                }\n            });\n            if (newkey) {\n                valuebuf[newkey] = newval;\n            }\n\n            $('#' + that.attr('data-for')).val(shopmetadataedit.recombinevalues(valuebuf, format));\n            theform.empty();\n            themodal.css('display', 'none');\n        }\n    };\n\n    return shopmetadataedit;\n});\n"],"names":["define","$","log","shopmetadataedit","init","bind","this","openeditmodal","parsevalues","values","format","arr","part","parts","valuearr","JSON","parse","split","recombinevalues","val","valueparts","stringify","push","join","e","stopPropagation","preventDefault","debug","row","rowname","rowinput","closebtn","valkey","that","theform","themodal","associatedtextarea","attr","class","append","type","size","value","placeholder","name","id","closeeditmodal","canceleditmodal","css","empty","valuebuf","newkey","newval","inputs","Object","each"],"mappings":"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"}